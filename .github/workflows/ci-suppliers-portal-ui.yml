name: suppliers-portal-ui

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - master

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*
    paths:
      - 'suppliers/src/UI'
      - '.github/workflows/ci-suppliers-portal-ui.yml'

  pull_request:

env:
  IMAGE_NAME: suppliers-portal-ui
  IMAGE_ID: ${{ secrets.OKD_DockerRegistry }}/${{ secrets.OKD_DockerRepository }}/suppliers-portal-ui

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2

      - name: Log into registry
        run: echo "${{ secrets.OKD_Password }}" | docker login ${{ secrets.OKD_DockerRegistry }} -u ${{ secrets.OKD_UserName }} --password-stdin

      - name: Pull image
        run: docker pull $IMAGE_ID || true

      - name: Build image
        working-directory: ./suppliers/src/UI
        run: docker build . --file Dockerfile --tag $IMAGE_NAME --cache-from=$IMAGE_ID

      - name: Log into registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

      - name: Push image
        run: |
          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
