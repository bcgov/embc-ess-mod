name: Sonar scan
on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * Mon'
    
jobs:
  sonar-scan-net:
    runs-on: ubuntu-latest
    steps:    
    - name: Checkout
      uses: actions/checkout@master
      with:
        fetch-depth: 0

    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin' # See 'Supported distributions' for available options
        java-version: '21'

    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v4.0.0
      with:
        dotnet-version: '6'

    - name: Cache SonarCloud packages
      uses: actions/cache@v4
      with:
        path: ~/sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar

    - name: Cache SonarCloud scanner
      id: cache-sonar-scanner
      uses: actions/cache@v4
      with:
        path: ./.sonar/scanner
        key: ${{ runner.os }}-sonar-scanner
        restore-keys: ${{ runner.os }}-sonar-scanner

    - name: Install SonarCloud scanner
      if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
      run: |
        dotnet tool update dotnet-sonarscanner --tool-path ./.sonar/scanner

    - name: Scan .net
      run: |
        ./.sonar/scanner/dotnet-sonarscanner begin /k:"${{ vars.SONAR_PROJECT_KEY }}" /o:"${{ vars.SONAR_ORGANIZATION }}" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="${{ vars.SONAR_URL }}"
        dotnet build ess/src/API
        dotnet build responders/src/API 
        dotnet build registrants/src/API
        dotnet build oauth-server/src/API
        ./.sonar/scanner/dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"

  sonar-scan-all:
    runs-on: ubuntu-latest
    steps:    
    - name: Checkout
      uses: actions/checkout@master
      with:
        fetch-depth: 0

    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin' # See 'Supported distributions' for available options
        java-version: '21'

    - name: Scan
      uses: SonarSource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ vars.SONAR_URL }}
      with:
        args: >
         -Dsonar.organization=${{ vars.SONAR_ORGANIZATION }}
         -Dsonar.projectKey=${{ vars.SONAR_PROJECT_KEY }}
