name: cd-landing-page

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - master

    paths:
      - "landing-page/src/**"
      - ".github/workflows/cd-landing-page.yml"

env:
  IMAGE_ID: ${{ secrets.DOCKER_REGISTRY }}/landing-page-ytqsl

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2

      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Log into registry
        uses: docker/login-action@v1
        with:
          registry: ${{ secrets.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Pull image
        run: docker pull $IMAGE_ID || true

      - name: Build image
        working-directory: ./landing-page/src/
        run: |
          # Get latest version from tag
          TAG=${{ steps.tag_version.outputs.new_tag }}
          tar -czh . | docker build --tag $IMAGE_ID:temp --cache-from=$IMAGE_ID --build-arg VERSION=$TAG -

      - name: Push image
        run: |
          # Get latest version from tag
          TAG=${{ steps.tag_version.outputs.new_tag }}
          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          echo TAG=${{ steps.tag_version.outputs.new_tag }}
          docker tag $IMAGE_ID:temp $IMAGE_ID:$VERSION
          docker tag $IMAGE_ID:temp $IMAGE_ID:$TAG
          docker push $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$TAG