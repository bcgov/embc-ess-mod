kind: Template
apiVersion: v1
metadata:
  name: registrants-portal-template

parameters:
  - description: openshift namespace prefix
    name: NAMESPACE_PREFIX
    required: true
  - description: openshift namespace env name
    name: ENV
    required: true
  - description: app name
    name: APP_NAME
    required: true
  - description: image tag for deployments
    name: TAG
    required: true
  - description: Reverse proxy known network
    name: KNOWN_NETWORKS
    value: ::ffff:10.97.0.0/16
  - description: ASPNET runtime environment (Development|Staging|Production)
    name: RUNTIME_ENVIRONMENT
    value: Staging
  - name: OAUTH_ENDPOINT
    required: true
  - description: Dynamics ADFS client ID
    name: OAUTH_CLIENT_ID
    required: true
  - description: Dynamics ADFS client secret
    name: OAUTH_CLIENT_SECRET
    required: true
  - description: Dynamics ADFS resource name
    name: OAUTH_RESOURCE
    required: true
  - description: Dynamics API endpoint
    name: DYNAMICS_ENDPOINT
    required: true
  - description: Dynamics entities base URI
    name: DYNAMICS_URI
    required: true
  - description: Dynamics service account domain
    name: DYNAMICS_SERVICE_ACCOUNT_DOMAIN
    required: true
  - description: Dynamics service account name
    name: OAUTH_DYNAMICS_SERVICE_ACCOUNT_NAME
    required: true
  - description: Dynamics service account password
    name: OAUTH_DYNAMICS_SERVICE_ACCOUNT_PASSWORD
    required: true
  - description: Location lists - enable cache auto refresh
    name: LOCATION_CACHE_REFRESH_ENABLED
    value: "true"
  - description: Locations lists - cache frequency refresh in minutes
    name: LOCATION_CACHE_REFRESH_INTERVAL
    value: "00:01:00"
  - description: BCSC client id
    name: BCSC_CLIENT_ID
    required: true
  - description: BCSC client secret
    name: BCSC_CLIENT_SECRET
    required: true
  - description: BCSC metadata endpoint
    name: BCSC_METADATA_ENDPOINT
    required: true
  - description: Reverse proxy known network
    name: APP_KNOWN_NETWORK
    required: false
  - description: JWT issuer
    name: JWT_ISSUER
    required: true
  - description: JWT audience
    name: JWT_AUDIENCE
    required: true
  - description: JWT signing key
    name: JWT_SIGNING_KEY
    required: true
  - description: JWT encrypting key
    name: JWT_ENCRYPTING_KEY
    required: true
  - description: JWT lifetime since creation in minutes
    name: JWT_TOKEN_EXPIRY
    required: true
  - description: CORS policy list of allowed origins
    name: CORS_ORIGINS
  - description: SMTP Server
    name: SMTP_SERVER
    required: true

objects:

  - kind: ConfigMap
    apiVersion: v1
    metadata:
      name: ${APP_NAME}-registrants-api-config
      namespace: ${NAMESPACE_PREFIX}-${ENV}
      labels:
        app: ${APP_NAME}-registrants-portal
        app.kubernetes.io/part-of: ${APP_NAME}
    data:     
      ASPNETCORE_ENVIRONMENT: ${RUNTIME_ENVIRONMENT}
      KEY_RING_PATH: "/dpkeys"
      Dynamics__ADFS__OAuth2TokenEndpoint: ${OAUTH_ENDPOINT}
      Dynamics__DynamicsApiEndpoint: ${DYNAMICS_ENDPOINT}
      Dynamics__DynamicsApiBaseUri: ${DYNAMICS_URI}
      location__cache__AutoRefreshEnabled: ${LOCATION_CACHE_REFRESH_ENABLED}
      location__cache__RefreshInterval: ${LOCATION_CACHE_REFRESH_INTERVAL}
      auth__bcsc__MetaDataAddress: ${BCSC_METADATA_ENDPOINT}
      app__knownNetwork: ${APP_KNOWN_NETWORK}
      app__cors__origins: ${CORS_ORIGINS}
      auth__jwt__ClaimsIssuer: ${JWT_ISSUER}
      auth__jwt__audience: ${JWT_AUDIENCE}
      auth__jwt__expiryInMinutes: ${JWT_TOKEN_EXPIRY}
      smtp__server: ${SMTP_SERVER}

  - kind: Secret
    apiVersion: v1
    type: Opaque
    metadata:
      name: ${APP_NAME}-registrants-api-secrets
      namespace: ${NAMESPACE_PREFIX}-${ENV}
      labels:
        app: ${APP_NAME}-registrants-portal
        app.kubernetes.io/part-of: ${APP_NAME}
    stringData:
      Dynamics__ADFS__ClientId: ${OAUTH_CLIENT_ID}
      Dynamics__ADFS__ClientSecret: ${OAUTH_CLIENT_SECRET}
      Dynamics__ADFS__ResourceName: ${OAUTH_RESOURCE}
      Dynamics__ADFS__serviceAccountDomain: ${DYNAMICS_SERVICE_ACCOUNT_DOMAIN}
      Dynamics__ADFS__serviceAccountName: ${OAUTH_DYNAMICS_SERVICE_ACCOUNT_NAME}
      Dynamics__ADFS__serviceAccountPassword: ${OAUTH_DYNAMICS_SERVICE_ACCOUNT_PASSWORD}
      auth__bcsc__clientId: ${BCSC_CLIENT_ID}
      auth__bcsc__clientSecret: ${BCSC_CLIENT_SECRET}
      auth__jwt__signingKey: ${JWT_SIGNING_KEY}
      auth__jwt__encryptingKey: ${JWT_ENCRYPTING_KEY}

  - kind: Service
    apiVersion: v1
    metadata:
      labels:
        app: ${APP_NAME}-registrants-portal
        app.kubernetes.io/part-of: ${APP_NAME}
      name: ${APP_NAME}-registrants-portal-api
      namespace: ${NAMESPACE_PREFIX}-${ENV}
    spec:
      ports:
        - name: 8080-tcp
          port: 8080
          protocol: TCP
          targetPort: 8080
      selector:
        deploymentconfig: ${APP_NAME}-registrants-portal-api
      type: ClusterIP

  - kind: Service
    apiVersion: v1
    metadata:
      labels:
        app: ${APP_NAME}-registrants-portal
        app.kubernetes.io/part-of: ${APP_NAME}
      name: ${APP_NAME}-registrants-portal-ui
      namespace: ${NAMESPACE_PREFIX}-${ENV}
    spec:
      ports:
        - name: 2015-tcp
          port: 2015
          protocol: TCP
          targetPort: 2015
      selector:
        deploymentconfig: ${APP_NAME}-registrants-portal-ui
      type: ClusterIP

  - kind: Route
    apiVersion: route.openshift.io/v1
    metadata:
      labels:
        app: ${APP_NAME}-registrants-portal
        app.kubernetes.io/part-of: ${APP_NAME}
      name: ${APP_NAME}-era-registrants-portal-api
      namespace: ${NAMESPACE_PREFIX}-${ENV}
    spec:
      host: ${APP_NAME}-era-registrants.apps.silver.devops.gov.bc.ca
      path: /api
      port:
        targetPort: 8080-tcp
      tls:
        insecureEdgeTerminationPolicy: Redirect
        termination: edge
      to:
        kind: Service
        name: ${APP_NAME}-registrants-portal-api
        weight: 100
      wildcardPolicy: None

  - kind: Route
    apiVersion: route.openshift.io/v1
    metadata:
      labels:
        app: ${APP_NAME}-registrants-portal
        app.kubernetes.io/part-of: ${APP_NAME}
      name: ${APP_NAME}-era-registrants-portal-ui
      namespace: ${NAMESPACE_PREFIX}-${ENV}
    spec:
      host: ${APP_NAME}-era-registrants.apps.silver.devops.gov.bc.ca
      path: /
      port:
        targetPort: 2015-tcp
      tls:
        insecureEdgeTerminationPolicy: Redirect
        termination: edge
      to:
        kind: Service
        name: ${APP_NAME}-registrants-portal-ui
        weight: 100

  - kind: NetworkPolicy
    apiVersion: networking.k8s.io/v1
    metadata:
      name: ${APP_NAME}-registrants-portal
      labels:
        app: ${APP_NAME}-registrants-portal
        app.kubernetes.io/part-of: ${APP_NAME}
      namespace: ${NAMESPACE_PREFIX}-${ENV}
    spec:
      podSelector:
        matchLabels:
          app: ${APP_NAME}-registrants-portal
      ingress:
      - ports:
        - protocol: TCP
          port: 2015
        - protocol: TCP
          port: 8080

  - kind: DeploymentConfig
    apiVersion: apps.openshift.io/v1
    metadata:
      labels:
        app: ${APP_NAME}-registrants-portal
        app.kubernetes.io/part-of: ${APP_NAME}
      name: ${APP_NAME}-registrants-portal-api
      namespace: ${NAMESPACE_PREFIX}-${ENV}
    spec:
      replicas: 2
      selector:
        deploymentconfig: ${APP_NAME}-registrants-portal-api
      strategy:
        activeDeadlineSeconds: 21600
        resources: {}
        rollingParams:
          intervalSeconds: 1
          maxSurge: 25%
          maxUnavailable: 25%
          timeoutSeconds: 600
          updatePeriodSeconds: 1
        type: Rolling
      template:
        metadata:
          labels:
            app: ${APP_NAME}-registrants-portal
            app.kubernetes.io/part-of: ${APP_NAME}
            deploymentconfig: ${APP_NAME}-registrants-portal-api
        spec:
          containers:
            - name: registrants-portal-api
              envFrom:
                - configMapRef:
                    name: ${APP_NAME}-registrants-api-config
                - secretRef:
                    name: ${APP_NAME}-registrants-api-secrets
              image: docker-registry.default.svc:5000/${NAMESPACE_PREFIX}-tools/registrants-portal-api:${TAG}
              imagePullPolicy: Always
              volumeMounts:
                - mountPath: /dpkeys
                  name: dp-keys
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          terminationGracePeriodSeconds: 30
          volumes:
            - name: dp-keys
              persistentVolumeClaim:
                claimName: ${APP_NAME}-registrants-key-ring
      test: false
      triggers:
        - type: ConfigChange
        - type: ImageChange
          imageChangeParams:
            automatic: true
            containerNames:
              - registrants-portal-api
            from:
              kind: ImageStreamTag
              name: registrants-portal-api:${TAG}
              namespace: ${NAMESPACE_PREFIX}-tools

  - kind: DeploymentConfig
    apiVersion: apps.openshift.io/v1
    metadata:
      labels:
        app: ${APP_NAME}-registrants-portal
        app.kubernetes.io/part-of: ${APP_NAME}
      name: ${APP_NAME}-registrants-portal-ui
      namespace: ${NAMESPACE_PREFIX}-${ENV}
    spec:
      replicas: 2
      selector:
        deploymentconfig: ${APP_NAME}-registrants-portal-ui
      strategy:
        activeDeadlineSeconds: 21600
        resources: {}
        rollingParams:
          intervalSeconds: 1
          maxSurge: 25%
          maxUnavailable: 25%
          timeoutSeconds: 600
          updatePeriodSeconds: 1
        type: Rolling
      template:
        metadata:
          labels:
            app: ${APP_NAME}-registrants-portal
            app.kubernetes.io/part-of: ${APP_NAME}
            deploymentconfig: ${APP_NAME}-registrants-portal-ui
        spec:
          containers:
            - name: registrants-portal-ui
              env:
                - name: API_URL
                  value: ${APP_NAME}-registrants-portal-api:8080
              image: docker-registry.default.svc:5000/${NAMESPACE_PREFIX}-tools/registrants-portal-ui:${TAG}
              imagePullPolicy: Always
              ports:
                - containerPort: 2015
                  protocol: TCP
              resources: {}
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          terminationGracePeriodSeconds: 30
      test: false
      triggers:
        - type: ConfigChange
        - type: ImageChange
          imageChangeParams:
            automatic: true
            containerNames:
              - registrants-portal-ui
            from:
              kind: ImageStreamTag
              name: registrants-portal-ui:${TAG}
              namespace: ${NAMESPACE_PREFIX}-tools

  - kind: "PersistentVolumeClaim"
    apiVersion: "v1"
    metadata:
      name: ${APP_NAME}-registrants-key-ring
      namespace: ${NAMESPACE_PREFIX}-${ENV}
      labels:
        app: ${APP_NAME}-registrants-portal
        app.kubernetes.io/part-of: ${APP_NAME}
    spec:
      accessModes:
        - "ReadWriteMany"
      resources:
        requests:
          storage: "100Mi"
