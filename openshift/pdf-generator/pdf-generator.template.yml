kind: Template
apiVersion: template.openshift.io/v1
metadata:
  name: pdf-generator-template

parameters:
  - description: openshift namespace prefix
    name: NAMESPACE_PREFIX
    required: true
  - description: openshift namespace env name
    name: ENV
    required: true
  - description: app name
    name: APP_NAME
    required: true
  - description: image tag for deployments
    name: TAG
    required: true
  - description: ASPNET runtime environment (Development/Staging/Production)
    name: RUNTIME_ENVIRONMENT
    value: Staging
  - description: REDIS Service connection string
    name: REDIS_CONNECTIONSTRING
    required: false
  - description: splunk url
    name: SPLUNK_URL
    required: false
  - description: splunk token
    name: SPLUNK_TOKEN
    required: false

objects:
  - kind: ConfigMap
    apiVersion: v1
    metadata:
      name: ${APP_NAME}-pdf-generator-config
      namespace: ${NAMESPACE_PREFIX}-${ENV}
      labels:
        app: ${APP_NAME}
        app.kubernetes.io/part-of: ${APP_NAME}
    data:
      APP_NAME: ${APP_NAME}-pdf-generator
      ASPNETCORE_ENVIRONMENT: ${RUNTIME_ENVIRONMENT}
      KEY_RING_PATH: "/dpkeys/${APP_NAME}-pdf-generator"
      CHROME_CACHE_PATH: "/cache"

  - kind: Secret
    apiVersion: v1
    type: Opaque
    metadata:
      name: ${APP_NAME}-pdf-generator-secrets
      namespace: ${NAMESPACE_PREFIX}-${ENV}
      labels:
        app: ${APP_NAME}-pdf-generator
        app.kubernetes.io/part-of: ${APP_NAME}
    stringData:
      REDIS_CONNECTIONSTRING: ${REDIS_CONNECTIONSTRING}
      SPLUNK_URL: ${SPLUNK_URL}
      SPLUNK_TOKEN: ${SPLUNK_TOKEN}

  - kind: Service
    apiVersion: v1
    metadata:
      labels:
        app: ${APP_NAME}-pdf-generator
        app.kubernetes.io/part-of: ${APP_NAME}
      name: ${APP_NAME}-pdf-generator
      namespace: ${NAMESPACE_PREFIX}-${ENV}
      annotations:
        service.alpha.openshift.io/serving-cert-secret-name: ${APP_NAME}-pdf-generator-ssl
    spec:
      ports:
        - name: 2020-tcp
          port: 2020
          protocol: TCP
          targetPort: 8080
      selector:
        deploymentconfig: ${APP_NAME}-pdf-generator
      type: ClusterIP

  - kind: NetworkPolicy
    apiVersion: networking.k8s.io/v1
    metadata:
      name: ${APP_NAME}-pdf-generator
      labels:
        app: ${APP_NAME}-pdf-generator
        app.kubernetes.io/part-of: ${APP_NAME}
      namespace: ${NAMESPACE_PREFIX}-${ENV}
    spec:
      podSelector:
        matchLabels:
          app: ${APP_NAME}-pdf-generator
      policyTypes:
        - Ingress
      ingress:
        - from:
            - podSelector:
                matchLabels:
                  app.kubernetes.io/part-of: ${APP_NAME}
                  role: backend
          ports:
            - protocol: TCP
              port: 8080

  - kind: DeploymentConfig
    apiVersion: apps.openshift.io/v1
    metadata:
      labels:
        app: ${APP_NAME}-pdf-generator
        app.kubernetes.io/part-of: ${APP_NAME}
      name: ${APP_NAME}-pdf-generator
      namespace: ${NAMESPACE_PREFIX}-${ENV}
    spec:
      replicas: 2
      selector:
        deploymentconfig: ${APP_NAME}-pdf-generator
      strategy:
        type: Rolling
        resources:
          limits:
            cpu: 15m
            memory: 64Mi
          requests:
            cpu: 5m
            memory: 32Mi
        rollingParams:
          intervalSeconds: 1
          maxSurge: 25%
          maxUnavailable: 25%
          timeoutSeconds: 600
          updatePeriodSeconds: 1
      template:
        metadata:
          labels:
            app: ${APP_NAME}-pdf-generator
            app.kubernetes.io/part-of: ${APP_NAME}
            deploymentconfig: ${APP_NAME}-pdf-generator
        spec:
          containers:
            - name: pdf-generator
              resources:
                limits:
                  cpu: 150m
                  memory: 512Mi
                requests:
                  cpu: 50m
                  memory: 256Mi
              env:
                - name: "ASPNETCORE_Kestrel__Certificates__Default__Path"
                  value: "/ssl/tls.crt"
                - name: "ASPNETCORE_Kestrel__Certificates__Default__KeyPath"
                  value: "/ssl/tls.key"
              envFrom:
                - configMapRef:
                    name: ${APP_NAME}-pdf-generator-config
                - secretRef:
                    name: ${APP_NAME}-pdf-generator-secrets
              image: docker-registry.default.svc:5000/${NAMESPACE_PREFIX}-tools/pdf-generator:${TAG}
              imagePullPolicy: Always
              volumeMounts:
                - mountPath: /ssl
                  name: ssl
                  readonly: true
                - mountPath: /dpkeys
                  name: dp
                - mountPath: /cache
                  name: cache
              livenessProbe:
                httpGet:
                  scheme: HTTPS
                  path: /hc/live
                  port: 8080
                timeoutSeconds: 5
                periodSeconds: 10
                successThreshold: 1
                failureThreshold: 5
              startupProbe:
                httpGet:
                  scheme: HTTPS
                  path: /hc/startup
                  port: 8080
                initialDelaySeconds: 15
                timeoutSeconds: 5
                periodSeconds: 10
                successThreshold: 1
                failureThreshold: 5
              readinessProbe:
                httpGet:
                  scheme: HTTPS
                  path: /hc/ready
                  port: 8080
                timeoutSeconds: 5
                periodSeconds: 10
                successThreshold: 1
                failureThreshold: 5
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          terminationGracePeriodSeconds: 30
          volumes:
            - name: ssl
              secret:
                secretName: ${APP_NAME}-pdf-generator-ssl
            - name: dp
              persistentVolumeClaim:
                claimName: ${APP_NAME}-data-protection #defined in ess backend template
            - name: cache
              persistentVolumeClaim:
                claimName: ${APP_NAME}-pdf-generator-cache
      test: false
      triggers:
        - type: ConfigChange
        - type: ImageChange
          imageChangeParams:
            automatic: true
            containerNames:
              - pdf-generator
            from:
              kind: ImageStreamTag
              name: pdf-generator:${TAG}
              namespace: ${NAMESPACE_PREFIX}-tools

  - kind: HorizontalPodAutoscaler
    apiVersion: autoscaling/v2beta2
    metadata:
      name: ${APP_NAME}-pdf-generator-has
      namespace: ${NAMESPACE_PREFIX}-${ENV}
      labels:
        app: ${APP_NAME}-pdf-generator
        app.kubernetes.io/part-of: ${APP_NAME}
    spec:
      scaleTargetRef:
        kind: DeploymentConfig
        name: ${APP_NAME}-pdf-generator
        apiVersion: apps.openshift.io/v1
      minReplicas: 3
      maxReplicas: 12
      metrics:
        - type: Resource
          resource:
            name: cpu
            target:
              type: Utilization
              averageUtilization: 150
        - type: Resource
          resource:
            name: memory
            target:
              type: Utilization
              averageUtilization: 125

  - kind: "PersistentVolumeClaim"
    apiVersion: "v1"
    metadata:
      name: ${APP_NAME}-pdf-generator-cache
      namespace: ${NAMESPACE_PREFIX}-${ENV}
      labels:
        app: ${APP_NAME}-pdf-generator
        app.kubernetes.io/part-of: ${APP_NAME}
    spec:
      accessModes:
        - "ReadWriteMany"
      resources:
        requests:
          storage: "1024Mi"
